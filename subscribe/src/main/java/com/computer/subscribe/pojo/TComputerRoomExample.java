package com.computer.subscribe.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.computer.subscribe.pojo.response.LimitExample;

public class TComputerRoomExample extends LimitExample {
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the
	 * database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public TComputerRoomExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException(
						"Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2,
				String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException(
						"Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andRoomNumIsNull() {
			addCriterion("room_num is null");
			return (Criteria) this;
		}

		public Criteria andRoomNumIsNotNull() {
			addCriterion("room_num is not null");
			return (Criteria) this;
		}

		public Criteria andRoomNumEqualTo(Integer value) {
			addCriterion("room_num =", value, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumNotEqualTo(Integer value) {
			addCriterion("room_num <>", value, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumGreaterThan(Integer value) {
			addCriterion("room_num >", value, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("room_num >=", value, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumLessThan(Integer value) {
			addCriterion("room_num <", value, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumLessThanOrEqualTo(Integer value) {
			addCriterion("room_num <=", value, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumIn(List<Integer> values) {
			addCriterion("room_num in", values, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumNotIn(List<Integer> values) {
			addCriterion("room_num not in", values, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumBetween(Integer value1, Integer value2) {
			addCriterion("room_num between", value1, value2, "roomNum");
			return (Criteria) this;
		}

		public Criteria andRoomNumNotBetween(Integer value1, Integer value2) {
			addCriterion("room_num not between", value1, value2, "roomNum");
			return (Criteria) this;
		}

		public Criteria andTotalSetsIsNull() {
			addCriterion("total_sets is null");
			return (Criteria) this;
		}

		public Criteria andTotalSetsIsNotNull() {
			addCriterion("total_sets is not null");
			return (Criteria) this;
		}

		public Criteria andTotalSetsEqualTo(Integer value) {
			addCriterion("total_sets =", value, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsNotEqualTo(Integer value) {
			addCriterion("total_sets <>", value, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsGreaterThan(Integer value) {
			addCriterion("total_sets >", value, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsGreaterThanOrEqualTo(Integer value) {
			addCriterion("total_sets >=", value, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsLessThan(Integer value) {
			addCriterion("total_sets <", value, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsLessThanOrEqualTo(Integer value) {
			addCriterion("total_sets <=", value, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsIn(List<Integer> values) {
			addCriterion("total_sets in", values, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsNotIn(List<Integer> values) {
			addCriterion("total_sets not in", values, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsBetween(Integer value1, Integer value2) {
			addCriterion("total_sets between", value1, value2, "totalSets");
			return (Criteria) this;
		}

		public Criteria andTotalSetsNotBetween(Integer value1, Integer value2) {
			addCriterion("total_sets not between", value1, value2, "totalSets");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusIsNull() {
			addCriterion("available_status is null");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusIsNotNull() {
			addCriterion("available_status is not null");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusEqualTo(Integer value) {
			addCriterion("available_status =", value, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusNotEqualTo(Integer value) {
			addCriterion("available_status <>", value, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusGreaterThan(Integer value) {
			addCriterion("available_status >", value, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("available_status >=", value, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusLessThan(Integer value) {
			addCriterion("available_status <", value, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusLessThanOrEqualTo(Integer value) {
			addCriterion("available_status <=", value, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusIn(List<Integer> values) {
			addCriterion("available_status in", values, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusNotIn(List<Integer> values) {
			addCriterion("available_status not in", values, "availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusBetween(Integer value1, Integer value2) {
			addCriterion("available_status between", value1, value2,
					"availableStatus");
			return (Criteria) this;
		}

		public Criteria andAvailableStatusNotBetween(Integer value1,
				Integer value2) {
			addCriterion("available_status not between", value1, value2,
					"availableStatus");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedIsNull() {
			addCriterion("admin_num_operated is null");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedIsNotNull() {
			addCriterion("admin_num_operated is not null");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedEqualTo(Long value) {
			addCriterion("admin_num_operated =", value, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedNotEqualTo(Long value) {
			addCriterion("admin_num_operated <>", value, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedGreaterThan(Long value) {
			addCriterion("admin_num_operated >", value, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedGreaterThanOrEqualTo(Long value) {
			addCriterion("admin_num_operated >=", value, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedLessThan(Long value) {
			addCriterion("admin_num_operated <", value, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedLessThanOrEqualTo(Long value) {
			addCriterion("admin_num_operated <=", value, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedIn(List<Long> values) {
			addCriterion("admin_num_operated in", values, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedNotIn(List<Long> values) {
			addCriterion("admin_num_operated not in", values, "adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedBetween(Long value1, Long value2) {
			addCriterion("admin_num_operated between", value1, value2,
					"adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andAdminNumOperatedNotBetween(Long value1, Long value2) {
			addCriterion("admin_num_operated not between", value1, value2,
					"adminNumOperated");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeIsNull() {
			addCriterion("operated_time is null");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeIsNotNull() {
			addCriterion("operated_time is not null");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeEqualTo(Date value) {
			addCriterion("operated_time =", value, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeNotEqualTo(Date value) {
			addCriterion("operated_time <>", value, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeGreaterThan(Date value) {
			addCriterion("operated_time >", value, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeGreaterThanOrEqualTo(Date value) {
			addCriterion("operated_time >=", value, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeLessThan(Date value) {
			addCriterion("operated_time <", value, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeLessThanOrEqualTo(Date value) {
			addCriterion("operated_time <=", value, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeIn(List<Date> values) {
			addCriterion("operated_time in", values, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeNotIn(List<Date> values) {
			addCriterion("operated_time not in", values, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeBetween(Date value1, Date value2) {
			addCriterion("operated_time between", value1, value2, "operatedTime");
			return (Criteria) this;
		}

		public Criteria andOperatedTimeNotBetween(Date value1, Date value2) {
			addCriterion("operated_time not between", value1, value2,
					"operatedTime");
			return (Criteria) this;
		}

		public Criteria andLocationIsNull() {
			addCriterion("location is null");
			return (Criteria) this;
		}

		public Criteria andLocationIsNotNull() {
			addCriterion("location is not null");
			return (Criteria) this;
		}

		public Criteria andLocationEqualTo(String value) {
			addCriterion("location =", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotEqualTo(String value) {
			addCriterion("location <>", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationGreaterThan(String value) {
			addCriterion("location >", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationGreaterThanOrEqualTo(String value) {
			addCriterion("location >=", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationLessThan(String value) {
			addCriterion("location <", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationLessThanOrEqualTo(String value) {
			addCriterion("location <=", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationLike(String value) {
			addCriterion("location like", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotLike(String value) {
			addCriterion("location not like", value, "location");
			return (Criteria) this;
		}

		public Criteria andLocationIn(List<String> values) {
			addCriterion("location in", values, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotIn(List<String> values) {
			addCriterion("location not in", values, "location");
			return (Criteria) this;
		}

		public Criteria andLocationBetween(String value1, String value2) {
			addCriterion("location between", value1, value2, "location");
			return (Criteria) this;
		}

		public Criteria andLocationNotBetween(String value1, String value2) {
			addCriterion("location not between", value1, value2, "location");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityIsNull() {
			addCriterion("act_available_quantity is null");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityIsNotNull() {
			addCriterion("act_available_quantity is not null");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityEqualTo(Integer value) {
			addCriterion("act_available_quantity =", value, "actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityNotEqualTo(Integer value) {
			addCriterion("act_available_quantity <>", value, "actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityGreaterThan(Integer value) {
			addCriterion("act_available_quantity >", value, "actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityGreaterThanOrEqualTo(Integer value) {
			addCriterion("act_available_quantity >=", value, "actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityLessThan(Integer value) {
			addCriterion("act_available_quantity <", value, "actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityLessThanOrEqualTo(Integer value) {
			addCriterion("act_available_quantity <=", value, "actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityIn(List<Integer> values) {
			addCriterion("act_available_quantity in", values,
					"actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityNotIn(List<Integer> values) {
			addCriterion("act_available_quantity not in", values,
					"actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityBetween(Integer value1,
				Integer value2) {
			addCriterion("act_available_quantity between", value1, value2,
					"actAvailableQuantity");
			return (Criteria) this;
		}

		public Criteria andActAvailableQuantityNotBetween(Integer value1,
				Integer value2) {
			addCriterion("act_available_quantity not between", value1, value2,
					"actAvailableQuantity");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table t_computer_room
	 *
	 * @mbggenerated do_not_delete_during_merge Sat Apr 17 17:50:00 CST 2021
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the
	 * database table t_computer_room
	 *
	 * @mbggenerated Sat Apr 17 17:50:00 CST 2021
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}